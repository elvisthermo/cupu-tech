{"version":3,"sources":["componets/Header.js","services/api.js","App.js","serviceWorker.js","index.js"],"names":["CustomHeader","className","api","axios","create","baseURL","App","useState","fifoRequest","setFifoRequest","a","addRequest","id","Date","now","name","date","desc","status","useEffect","get","then","response","console","log","data","fifo","sort","b","getHours","getMinutes","map","d","i","classNameName","href","data-target","title","message","aria-label","aria-hidden","key","width","onClick","arrayfinish","filter","alert","handleFinishRequest","filerRequest","handleDeleteRequest","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.fbe2f62b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction CustomHeader() {\r\n  return (\r\n  <section className=\"hero is-info welcome is-small\">\r\n    <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n            <h1 className=\"title\">\r\n            Olá,\r\n            </h1>\r\n            <h2 className=\"subtitle\">\r\n            Bem vindo ao seu painel de administração de pedidos!\r\n            </h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n)}\r\n\r\nexport default CustomHeader;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.jsonbin.io/b/5ef39e322406353b2e0bf882/15\"\r\n})\r\n\r\nexport default api;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react';\nimport CustomHeader from './componets/Header';\nimport api from './services/api';\nimport './css/admin.css';\nimport './css/bulma.css';\nimport './css/styles.css';\n\n\nfunction App() {\n    const [fifoRequest,setFifoRequest] = useState([]);\n    \n    useEffect(()=>{\n        api.get('/').then(response=>{\n            console.log(\"responde json:\",response.data);\n\n            let fifo = response.data.sort((a,b) => new Date(a.date).getHours() - new Date(b.date).getHours());\n            \n            fifo = fifo.sort((a,b) => new Date(a.date).getMinutes() - new Date(b.date).getMinutes());\n\n            fifo.map((d,i)=>{\n                if(d.date > fifo[2].date){\n                    console.log('emaior',d.date);\n                }\n                else{\n                    console.log('não e',fifo[2].date)\n                }\n            })\n        \n            \n            setFifoRequest(fifo);\n        })\n    },[]);\n\n    async function handleAddRequest(){\n        const addRequest = {\n            id: `id ${Date.now()}`,\n            name: `pedido ${Date.now()}`,\n            date: Date(),\n            desc: `pedido realizado ${Date.now()}`,\n            status: false\n        }\n\n        setFifoRequest([...fifoRequest,addRequest]);\n    }\n\n    function handleFinishRequest(id){\n        const finishRequest = fifoRequest.map(d=>{\n            if(d.id===id){\n                d.status = true\n            }\n      \n            return d;\n    })\n\n    const arrayfinish = finishRequest.filter(d=> !d.status)\n    setFifoRequest(arrayfinish);\n    alert(\"Pedido finalizado\");\n}\n\n    function handleDeleteRequest(id){\n        const filerRequest = fifoRequest.filter(d=>d.id!==id);\n\n        console.log(filerRequest)\n        setFifoRequest(filerRequest);\n        alert(\"Pedido cancelado\");\n        \n    }\n\n    return (\n    <div className=\"App\">\n\n    <nav classNameName=\"navbar is-white\">\n        <div className=\"container\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item brand-text\" href=\"../index.html\">\n                    Sobre mim\n                </a>\n                <div className=\"navbar-burger burger\" data-target=\"navMenu\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </div>\n            <div id=\"navMenu\" className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <a className=\"navbar-item\" href=\"\">\n                        Home\n                    </a>\n                    <a className=\"navbar-item\" href=\"https://github.com/elvisthermo/cupu-tech\">\n                        About\n                    </a>\n                </div>\n\n            </div>\n        </div>\n    </nav>\n\n    <div className=\"container\">\n        <div className=\"columns\">\n            <div className=\"column is-16\">\n\n                <CustomHeader title=\"Olá\" message=\"Bem vindo ao seu painel de administração de pedidos!\"/>\n                \n                <div className=\"columns\">\n                    <div className=\"column is-16\">\n                        <div className=\"card events-card\">\n                            <header className=\"card-header\">\n                                <p className=\"card-header-title\">\n                                    Entradas\n                                </p>\n                                <a href=\"#\" className=\"card-header-icon\" aria-label=\"more options\">\n                                    <span className=\"icon\">\n                                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                                    </span>\n                                </a>\n                            </header>\n\n                            \n                            {/* foooter----------------- */}\n                            \n                            <div className=\"card-table\">\n                                <div className=\"content\">\n                                    <table className=\"table is-fullwidth is-striped\">\n                                        <tbody>\n                                            {fifoRequest.map((data,i) =>{\n                                                return(\n                                                <tr key={data.id}  id={i==0?\"alert-request\":\"\"} \n                                                title={i==0?\"pedido emergencial\":\"\"}\n                                                >\n                                                    <td width=\"5%\"><i className=\"fa fa-bell-o\"></i></td>\n                                                    <td>{data.name}</td>\n                                                    <td>{data.desc}</td>\n                                                    <td>{\n                                                    data.date}\n                                                </td>\n                                                    \n                                                    <td id=\"crud-buttons\" className=\"level-right\">\n                                                        <a className=\"button is-small is-primary\"\n                                                            onClick={()=>handleFinishRequest(data.id)}>Finalizar\n                                                        </a>\n                                                    <a className=\"button is-small is-danger\"\n                                                            onClick={()=>handleDeleteRequest(data.id)}>Cancelar</a>\n                                                    </td>\n                                                </tr>\n                                                )\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n      \n                            <footer className=\"card-footer\">\n                                <div className=\"card-footer-item\">\n                                     <a className=\"button is-small is-info\"\n                                                        onClick={handleAddRequest}>\n                                                            Adicionar Pedido</a> \n                                </div>\n                            </footer>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}